// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//  provider  = "postgresql"
//   url  	    = env("DATABASE_URL")
//   directUrl = env("DIRECT_URL")
// }

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

//datasource db {
// provider  = "mysql"
 // url  	    = env("DATABASE_URL")
//}

model User {
  id            String  @id @default(cuid())
  name          String
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  role          String?   @default("USER")  // o  ADMIN
  accounts      Account[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


// Definición de la tabla Cliente
model Cliente {
  id        Int      @id @default(autoincrement())
  nombre    String
  direccion String?
  bicicletas Bicicleta[]
}

// Definición de la tabla Bicicleta
model Bicicleta {
  id           Int     @id @default(autoincrement())
  modelo       String
  precio       Int
  clienteId    Int?
  cliente      Cliente? @relation(fields: [clienteId], references: [id])
}